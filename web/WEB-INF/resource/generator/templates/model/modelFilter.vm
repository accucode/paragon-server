package ${package}.filter;

import com.kodemore.utility.*;

import ${package}.criteria.*;
import ${package}.filter.base.*;

public class ${model.f_FilterClass}
    extends ${model.f_FilterBaseClass}
{
$utility.protocol("sort (enum)")

    public static enum Sort
        implements KmEnumIF
    {
        ${model.primaryKeyField.f_Name};
    }

$utility.protocol("variables")

    private Sort    _sort;
    private boolean _ascending;

$utility.protocol("constructor")

    public ${model.f_FilterClass}()
    {
        sortOn${model.primaryKeyField.f_Name}();
        sortAscending();
    }

$utility.protocol("sort")

    public void sortOn${model.primaryKeyField.f_Name}()
    {
        setSort(Sort.${model.primaryKeyField.f_Name});
    }

    //==================================================
    //= sort :: accessing
    //==================================================

    public Sort getSort()
    {
        return _sort;
    }

    public void setSort(Sort e)
    {
        _sort = e;
    }

    public void sortOn(int i)
    {
        setSort(Sort.values()[i]);
    }

    public boolean usesSort()
    {
        return _sort != null;
    }

    //==================================================
    //= sort :: ascending
    //==================================================

    public boolean getAscending()
    {
        return _ascending;
    }

    public void setAscending(boolean e)
    {
        _ascending = e;
    }

    public void sortAscending()
    {
        setAscending(true);
    }

    public void sortDescending()
    {
        setAscending(false);
    }

$utility.protocol("apply")

    @Override
    protected void applyConditionsTo(${model.f_CriteriaClass} c)
    {
        // none
    }

    @Override
    protected void applySortsTo(${model.f_CriteriaClass} c)
    {
        if ( !usesSort() )
            return;

        Sort sort = getSort();
        boolean asc = getAscending();

        switch ( sort )
        {
            case ${model.primaryKeyField.f_Name}:
                c.sortOn${model.primaryKeyField.f_Name}(asc);
                break;
        }
    }

}
