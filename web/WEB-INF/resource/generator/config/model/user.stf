model
: name      = user
: help...
    ---
    Users define the people that can log in to a particular tenant.
    Most users are configured as Other and then given project specific roles.
    A few users may be configured as Admin users so that they can create new
    projects.
    ---

database
: auditLog  = true
: locking   = true

    index
    : name      = email
    : unique    = true
    : on        = tenant
    : on        = email

attributes


    //*****************************************************
    //** basics
    //*****************************************************


    #include basicUid.stf
    #include basicTimestamps.stf
    #include basicDisplay.stf


    //*****************************************************
    //** context
    //*****************************************************


    association
    : name      = tenant
    : help      = The tenant.
    : modelName = tenant
    : relation  = parent
    : required  = true

        delegate
        : field = name


    //*****************************************************
    //** name
    //*****************************************************


    #include personName.stf


    //*****************************************************
    //** email / login
    //*****************************************************


    field
    : name      = email
    : help      = Used both to sign in, and to send emails to this user.
    : type      = email
    : required  = true


    field
    : name      = passwordSalt
    : help...
        ---
        The salt used for this user. Each user has a different salt.
        The salt is set to a random value when the user is created.
        Once set the salt should never be changed, changing it will invalidate the password.
        ---
    : type      = uid
    : default   = newUid()
    : required  = true
    : auditLog  = mask


    field
    : name      = passwordHash
    : help...
        ---
        The password sha hash used to authenticate the user.
        The actual password is not stored.
        If the user has no password the hash is set to empty string.
        ---
    : type      = shaHash
    : auditLog  = mask


    //*****************************************************
    //** enabled
    //*****************************************************


    #include enabled.stf


    //*****************************************************
    //** details
    //*****************************************************


    field
    : name      = phone
    : help      = The number that may be used to contact this user.
    : type      = phone
    : required  = false


    field
    : name      = timeZoneCode
    : label     = Time Zone
    : help      = The user's preferred time zone.
    : type      = timeZoneCode
    : required  = true


    abstractAssociation
    : name      = lastProject
    : help      = The last project this user was working on.
    : modelName = project


    //*****************************************************
    //** role
    //*****************************************************


    field
    : name      = roleCode
    : label     = Role
    : help...
        ---
        The user's global access role.

        Developer, has full access to all data and functions in the app.

        Tenant Admin, the user has access to administration functions that affect the
        entire tenant. The user can add new users and projects.

        Project Member, the user is limited to specific projects. Project-specific
        permissions are determined by the project's manager via the member
        setup.
        ---
    : type      = longEnumCode
    : default   = MyUserRole.ProjectMember.getCode()
    : required  = true

        enum
            value(#Developer)
            value(#TenantAdmin)
            value(#ProjectMember)


    //*****************************************************
    //** memo
    //*****************************************************


    field
    : name      = memo
    : label     = Memo
    : help      = A free form memo.
    : type      = memo
