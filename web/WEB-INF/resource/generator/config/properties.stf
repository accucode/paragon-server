//###############################################
//## production
//###############################################


group
: name      = Production
: comment   = Some properties that are particularly important to the production environment.

    property
    : name      = environment
    : type      = string
    : default   = development
    : comment...
        ---
        Indicates the deployment environment.
        Valid options are: development, stage, production.
        ---


    property
    : name      = developerEmailCsv
    : type      = string
    : default   =  
    : comment...
        ---
        The email address(es) used when the system needs to send
        a message to the development staff. This may be used for 
        things like unhandled exceptions and feedback. The values
        should be a comma separated list of email addresses.
        ---


//###############################################
//## bootstrap
//###############################################


group
: name      = Bootstrap
: comment   = Properties used when bootstrapping the system.

    property
    : name      = bootstrapSystemHostname
    : type      = string
    : default   = system.localhost
    : comment...
        ---
        This is primarily used when bootstraping the initial 'system' tenant.
        After the initial bootstrap, the application should rely on the 
        hostname configured in the tenant database and identified by the 
        'system' uid in case the hostname is reconfigured in the live system.
        ---


//###############################################
//## servlet
//###############################################


group
: name      = Servlet
: comment   = General configuration for the servlet framework.

    property
    : name      = servletSslRedirect
    : type      = boolean
    : default   = false
    : comment...
        ---
        If true, requests to the main application servlet will be redirected
        as an SSL request.
        ---


    property
    : name      = webResourceVersioning
    : type      = string
    : default   = static
    : comment   ...
        ---
        This is used to automatically version css and javascript files.
        none   - the version is always set to 'version'.
        deploy - used in production to include the application version in the path.
        dev    - used in development; changes the path when the app is started.
        ---


    property
    : name      = writeLastServletResults
    : type      = boolean
    : default   = false
    : comment...
        ---
        If true, the servlet results are written to the 
        web root directory.
        ---

    property
    : name      = writeLastServletResultsCounter
    : type      = boolean
    : default   = false
    : comment...
        ---
        If true, a counter is appended to the file name so that the results are
        not overwritten each time.
        ---


//###############################################
//## one all (login)
//###############################################


group
: name      = OneAll
: comment   = Used to configure the OneAll social login.

    property
    : name      = oneAllEnabled
    : type      = boolean
    : default   = false
    : comment...
        ---
        Determine if the oneAll login is enabled.
        This is disabled by default, and can only be enabled in a hosting
        environment that has a routable domain name.
        ---

    property
    : name      = oneAllHost
    : type      = string
    : default   =
    : comment...
        ---
        The oneAll uri used to host our authentication service.
        This is provided by oneAll.
        E.g.: ourApplication.api.oneall.com
        ---

    property
    : name      = oneAllPublicKey
    : type      = string
    : default   =
    : comment...
        ---
        The public key provided by OneAll.
        ---

    property
    : name      = oneAllPrivateKey
    : type      = string
    : default   =
    : comment...
        ---
        The private key provided by OneAll.
        ---


//###############################################
//## paths
//###############################################


group
: name      = Paths
: comment...
    ---
    These are the core file system paths. All other file system paths are relative to these.
    Messing up these paths can cause awkward problems, for example the inability to auto-generate
    java code or properties.
    ---

    property
    : name      = sharedPersistentPath
    : type      = string
    : default   = /temp/shared/persistent
    : comment...
        ---
        The path to work files that persist across deployment.
        Use this path for files like ftp uploads, email attachments,
        csv uploads and other dynamic content. The contents of this directory are
        shared across all JVMs so some care needs to be take to avoid collisions.
        In production, this should be set to an absolute path that is outside of 
        the web root, so that it persists across deployments.
        ---

    property
    : name      = sharedTransientPath
    : type      = string
    : default   = /temp/shared/transient
    : comment...
        ---
        The path to work files that persist across deployment. Use this path for 
        files like ftp uploads, email attachments, csv uploads and other dynamic 
        content. The contents of this directory are shared across all JVMs so some 
        care needs to be take to avoid collisions. In production, this should be set 
        to an absolute path that is outside of the web root, so that it persists 
        across deployments.
        ---


//###############################################
//## monitoring
//###############################################


group
: name      = Monitoring
: comment   = These properties are used to control various background monitoring.

    property
    : name      = sqlWarningThresholdMs
    : type      = integer
    : default   = 1000
    : comment...
        ---
        Sql statements that exceed this threshold will be logged as a warning.
        A value of 0 disables logging.
        ---

    property
    : name      = daoCommandWarningThresholdMs
    : type      = integer
    : default   = 2000
    : comment...
        ---
        Dao commands requests that exceed this threshold will be logged as a warning.
        A value of 0 disables logging.
        ---

    property
    : name      = chorePerformanceLogEnabled
    : type      = boolean
    : default   = true
    : comment...
        ---
        When enabled each chore's performance (ms) is logged.
        This is enabled by default for production, but it is sometimes useful
        to temporarily disable this, especially in development. Each java chore
        class can override this to force enablement.
        ---
        

//###############################################
//## email chore
//###############################################


group
: name      = EmailChore
: comment   = This properties are used to send outbound emails.

    property
    : name      = sendEmailChoreEnabled
    : type      = boolean
    : default   = true
    : comment...
        ---
        Indicates if the chore should be run. Note even if the chore is run,
        that doesn't mean that emails will actually be sent.
        See also, the sendEmail* properties.
        ---

    property
    : name      = sendEmailChoreActiveSeconds
    : type      = integer
    : default   = 5
    : comment   = The active frequency of the chore.

    property
    : name      = sendEmailChoreIdleSeconds
    : type      = integer
    : default   = 60
    : comment   = The idle frequency of the chore.

    property
    : name      = sendEmailEnabled
    : type      = boolean
    : default   = true
    : comment...
        ---
        If false, email sending is completely disabled. The sendEmail 
        chore may still run, no email will be sent, and no emails will 
        be marked as sent.
        ---

    property
    : name      = sendEmailBatch
    : type      = integer
    : default   = 10
    : comment...
        ---
        The number of emails to send in each batch. Sending batches can 
        be more effecient, but if one email fails it may cause the entire 
        batch to fail.
        ---


//###############################################
//## email method
//###############################################


group
: name      = EmailMethod
: comment   = This properties are used to send outbound emails.

    property
    : name      = sendEmailMethod
    : type      = string
    : default   = print
    : comment...
        ---
        The mechanism used to send emails. Options are: smtp, gmail, print, noop.
        The default is set to 'print', this must be changed in production.
        
        [gmail] : Send emails using the gmail passthrough.
        [print] : Use System.out.print to display the contents of the email.
        [noop]  : No action is take (but the email will still be marked as sent.
        
        If you don't want the email to be marked as sent, then you must set 
        sendEmailEnabled=false.
        ---

    property
    : name      = sendEmailOverrideTo
    : type      = string
    : default   =
    : comment...
        ---
        If set, then force all emails to be sent to this email address 
        rather than the requested recipients. This can be useful for 
        testing.
        ---

    property
    : name      = sendEmailFromAddress
    : type      = string
    : default   = doNotReply@example.net
    : comment   = The address that will be listed as the 'from' address.


//###############################################
//## email smtp
//###############################################


group
: name      = EmailSmtp
: comment   = This properties are used to send outbound emails.

    property
    : name      = smtpScheme
    : type      = string
    : default   = smtp
    : comment   = Connecting to smtp.

    property
    : name      = smtpHost
    : type      = string
    : default   = smtp
    : comment   = Connecting to smtp.

    property
    : name      = smtpPort
    : type      = integer
    : default   = 25
    : comment   = Connecting to smtp.

    property
    : name      = smtpUser
    : type      = string
    : default   =
    : comment   = Connecting to smtp.

    property
    : name      = smtpPassword
    : type      = string
    : default   =
    : comment   = Connecting to smtp.

    property
    : name      = smtpUseSsl
    : type      = boolean
    : default   = false
    : comment   = Use SSL when connecting to smtp.


//###############################################
//## email gmail
//###############################################


group
: name      = EmailGoogleMail
: comment   = This properties are used to send outbound emails.

    property
    : name      = gmailScheme
    : type      = string
    : default   = https
    : comment   = Connecting to gmail.

    property
    : name      = gmailHost
    : type      = string
    : default   = smtp.gmail.com
    : comment   = Connecting to gmail.

    property
    : name      = gmailPort
    : type      = integer
    : default   = 465
    : comment   = Connecting to gmail.

    property
    : name      = gmailUser
    : type      = string
    : default   =
    : comment   = Connecting to gmail.

    property
    : name      = gmailPassword
    : type      = string
    : default   =
    : comment   = Connecting to gmail.


//###############################################
//## urls
//###############################################


group
: name      = Urls
: comment   = External urls used by this application.

    property
    : name      = marketingUrl
    : type      = string
    : default   = http://www.example.net
    : comment...
        ---
        The url used to redirect people to the marketing website.
        ---

    property
    : name      = supportUrl
    : type      = string
    : default   = http://www.example.net
    : comment...
        ---
        The url used to redirect people to the general support team 
        and/or help desk.
        ---


//###############################################
//## server session
//###############################################


group
: name      = ServerSession
: comment   = Configuration of the serverSession used for both servlet and webService conversations.

    property
    : name      = serverSessionTimeoutSeconds
    : type      = integer
    : default   = 3600
    : comment...
        ---
        The length of time that a session may be idle before it is considered
        to be automatically stale.
        ---

    property
    : name      = serverSessionSecure
    : type      = boolean
    : default   = false
    : comment...
        ---
        Indicates if the cookie should be set to require secure 
        transmission (https/ssl).
        ---


//###############################################
//## database connection
//###############################################


group
: name      = DatabaseConnection
: comment   = The basic database properties.

    property
    : name      = databaseSchema
    : type      = string
    : default   =
    : comment   = Database connection.

    property
    : name      = databaseDriver
    : type      = string
    : default   =
    : comment   = Database connection.

    property
    : name      = databaseUri
    : type      = string
    : default   =
    : comment   = Database connection.

    property
    : name      = databaseUser
    : type      = string
    : default   =
    : comment   = Database connection.

    property
    : name      = databasePassword
    : type      = string
    : default   =
    : comment   = Database connection.


//###############################################
//## database patch
//###############################################


group
: name      = DatabasePatch
: comment   = Configure the automatic database patch tool.

    property
    : name      = databaseSyncOnStartup
    : type      = boolean
    : default   = true
    : comment...
        ---
        The application normally synchronizes the database patches
        upon startup. The patch tool uses an a pessimistic database
        lock to ensure single threaded operation even across multiple
        concurrent JVMs. This is typically enabled in production and
        provides for the standard way to deploy database migration scripts.
        ---


//###############################################
//## hibernate cache
//###############################################


group
: name      = HibernateSecondLevelCache
: comment   = Configuration parameters for using Hibernate second level cache.

    property
    : name      = hibernateUseSecondLevelCache
    : type      = boolean
    : default   = false
    : comment   = Use Hibernate second level caching.

    property
    : name      = hibernateCacheProvider
    : type      = string
    : default   =
    : comment   = Hibernate cache provider class.

    property
    : name      = hibernateMemcachedServers
    : type      = string
    : default   =
    : comment   = Names of the Memcached Servers, format is <hostname>:<port>

    property
    : name      = hibernateCacheTimeSeconds
    : type      = integer
    : default   = 300
    : comment   = How long items should remain in the second level cache.


//###############################################
//## chores
//###############################################


group
: name      = Chores
: comment   = Enablement and frequencies for chores

    property
    : name      = overridesReloaderChoreEnabled
    : type      = boolean
    : default   = true
    : comment   = Control whether the Overrides file is automatically reloaded during runtime.

    property
    : name      = overridesReloaderChoreActiveSeconds
    : type      = integer
    : default   = 10
    : comment   = x

    property
    : name      = overridesReloaderChoreIdleSeconds
    : type      = integer
    : default   = 10
    : comment   = x



    property
    : name      = log4jReloaderChoreEnabled
    : type      = boolean
    : default   = true
    : comment   = Control whether the log4j config file is automatically reloaded during runtime.

    property
    : name      = log4jReloaderChoreActiveSeconds
    : type      = integer
    : default   = 10
    : comment   = x

    property
    : name      = log4jReloaderChoreIdleSeconds
    : type      = integer
    : default   = 10
    : comment   = x



    property
    : name      = monitorChoreEnabled
    : type      = boolean
    : default   = true
    : comment   = Indicates if the chore should be run.

    property
    : name      = monitorChoreActiveSeconds
    : type      = integer
    : default   = 600
    : comment   = x

    property
    : name      = monitorChoreIdleSeconds
    : type      = integer
    : default   = 600
    : comment   = x



    property
    : name      = performanceLogFlusherChoreEnabled
    : type      = boolean
    : default   = true
    : comment   = Indicates if the chore should be run.

    property
    : name      = performanceLogFlusherChoreActiveSeconds
    : type      = integer
    : default   = 10
    : comment   = x

    property
    : name      = performanceLogFlusherChoreIdleSeconds
    : type      = integer
    : default   = 10
    : comment   = x



    property
    : name      = applicationLogFlusherChoreEnabled
    : type      = boolean
    : default   = true
    : comment   = Indicates if the chore should be run.

    property
    : name      = applicationLogFlusherChoreActiveSeconds
    : type      = integer
    : default   = 10
    : comment   = x

    property
    : name      = applicationLogFlusherChoreIdleSeconds
    : type      = integer
    : default   = 10
    : comment   = x



    property
    : name      = maintenanceChoreEnabled
    : type      = boolean
    : default   = true
    : comment   = Indicates if the chore should be run.

    property
    : name      = maintenanceChoreActiveSeconds
    : type      = integer
    : default   = 60
    : comment   = x

    property
    : name      = maintenanceChoreIdleSeconds
    : type      = integer
    : default   = 60
    : comment   = x



    property
    : name      = clearThemeCacheChoreEnabled
    : type      = boolean
    : default   = true
    : comment   = Indicates if the chore should be run.

    property
    : name      = clearThemeCacheChoreActiveSeconds
    : type      = integer
    : default   = 300
    : comment   = The active frequency of the chore.

    property
    : name      = clearThemeCacheChoreIdleSeconds
    : type      = integer
    : default   = 300
    : comment   = The idle frequency of the chore.


//###############################################
//## ftp
//###############################################


group
: name      = Ftp
: comment   = Properties for FTP

    property
    : name      = ftpEnabled
    : type      = boolean
    : default   = false
    : comment   = When disabled, the details of the message will be logged instead of being sent.


    property
    : name      = ftpSendToNotifierChoreEnabled
    : type      = boolean
    : default   = true
    : comment   = Notify (via ftp) other depots that a device has been 'sent' to them.

    property
    : name      = ftpSendToNotifierChoreActiveSeconds
    : type      = integer
    : default   = 60
    : comment   = x

    property
    : name      = ftpSendToNotifierChoreIdleSeconds
    : type      = integer
    : default   = 60
    : comment   = x


//###############################################
//## google chart
//###############################################


group
: name      = GoogleChart
: comment   = Properties for Google Chart

    property
    : name      = googleChartScheme
    : type      = string
    : default   = http
    : comment   = Configure the google chart url.

    property
    : name      = googleChartHost
    : type      = string
    : default   = chart.apis.google.com
    : comment   = Configure the google chart url.

    property
    : name      = googleChartPort
    : type      = integer
    : default   = 80
    : comment   = Configure the google chart url.

    property
    : name      = googleChartPath
    : type      = string
    : default   = chart
    : comment   = Configure the google chart url.


//###############################################
//## google maps
//###############################################


group
: name      = GoogleMaps
: comment   = Properties for Google Maps Api

    property
    : name      = googleMapsApiKey
    : type      = string
    : default   = AIzaSyD_WTy8rgoCU_yoGesX86t7tfpDyGsQWjw
    : comment...
        ---
        The private/secret api key for google maps api. The default key
        can be used for lightweight development and testing, but a different
        key should be used for production due to volume and licensing restrictions.
        ---


//###############################################
//## maintenance
//###############################################


group
: name      = Maintenance
: comment   = Controls the maintenance window for nightly chores. 

    property
    : name      = maintenancePeriodStartHour
    : type      = integer
    : default   = 6
    : comment...
        ---
        The start of the daily maintenance window. Value should be in the range [0..23]
        and corresponds to UTC.
        ---

    property
    : name      = maintenancePeriodEndHour
    : type      = integer
    : default   = 6
    : comment...
        ---
        The end of the daily maintenance window. Value should be in the range [0..23]
        and corresponds to UTC.
        ---

//###############################################
//## debug
//###############################################


group
: name      = Debug
: comment...
    ---
    Various debugging flags. These should all be disabled by default and are
    typically overriden by developers in the overrides file during development.
    ---

    property
    : name      = autoLoginEmail
    : type      = string
    : default   =
    : comment   = Used in development to enable automatic login.

    property
    : name      = printAuditLog
    : type      = boolean
    : default   = false
    : comment   = If true, logs are echoed to the console (log4j).

    property
    : name      = printPerformanceLog
    : type      = boolean
    : default   = false
    : comment   = If true, logs are echoed to the console (log4j).

    property
    : name      = ajaxLogEnabled
    : type      = boolean
    : default   = false
    : comment   = If true, all ScAjaxResults are logged in $webRoot/ajaxLog.txt.

    property
    : name      = printAjaxTime
    : type      = boolean
    : default   = false
    : comment   = If true, the time spent on each ajax call is logged.

    property
    : name      = ajaxLogDeleteOnStart
    : type      = boolean
    : default   = false
    : comment   = If true, the ajax log file is deleted when tomcat starts.


    property
    : name      = deleteThreadTopicsOnStart
    : type      = boolean
    : default   = false
    : comment...
        ---
        If true, all thread topics are deleted upon application start up.
        This is useful for simpler testing in development when we are
        GUARANTEED that there will be only a single JVM running at a time.
        This should NOT be enabled in stage or prod.
        ---

    property
    : name      = renderDebugDomComments
    : type      = boolean
    : default   = false
    : comment...
        ---
        If true, render an html comment into the dom that identifies
        the class name of the page and various controls.
        ---

    property
    : name      = contextFormatterEnabled
    : type      = boolean
    : default   = false
    : comment...
        ---
        Determines if the context registry is enabled. If enabled, 
        various instances such as KmCommand will store the additional
        details about the call stack that constructs the original instance.
        This can be fairly expensive, but is valuable in debugging
        the context of slow commands.
        ---

    property
    : name      = contextFormatterLines
    : type      = integer
    : default   = 20
    : comment...
        ---
        The number of lines to include in each context. If set to a value less than or equal
        to 0 (e.g.: -1), the full context will be stored.
        ---

    property
    : name      = showHibernateSql
    : type      = boolean
    : default   = false
    : comment   = Tell hibernate to show sql. Requires a restart to take effect.



//###############################################
//## end.
//###############################################


